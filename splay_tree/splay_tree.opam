opam-version: "1.2"
maintainer: "opensource@janestreet.com"
authors: ["Jane Street Group, LLC <opensource@janestreet.com>"]
homepage: "https://github.com/janestreet/splay_tree"
bug-reports: "https://github.com/janestreet/splay_tree/issues"
dev-repo: "git+https://github.com/janestreet/splay_tree.git"
license: "Apache-2.0"
build: [
  ["jbuilder" "build" "-p" name "-j" jobs]
]
depends: [
  "core_kernel"
  "ppx_jane"
  "jbuilder"                {build & >= "1.0+beta18.1"}
  "ocaml-migrate-parsetree" {>= "1.0"}
  "ppxlib"                  {>= "0.1.0"}
]
available: [ ocaml-version >= "4.06.1" ]
descr: "
A splay tree implementation

Splay trees are binary search trees that move recently accessed nodes
closer to the root for easier access.  They have amortized O(log
n)-time access for a large enough sequence of primitive operations.

A splay trees may outperform other trees such as red-black trees when
recently accessed items are more likely to be accessed in the near
future.

Notably, this splay tree implementation is parameterized by a
reduction operation which lets you specify an extra accumulator value,
which can then be searched by efficiently.
"
