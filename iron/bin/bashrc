#!/bin/bash

function fe_workspaces_root {
    local root=$(builtin cd / && fe workspace dir -basedir)
    eval "echo $root" # expand ~
}

function should_complete {
    [ "${COMP_LINE-xxx}" = "${COMP_LINE-yyy}" ]
}

function cdc {
    local root
    if should_complete; then
        fe list -name-only | grep -F "$2"
    elif [ -z "${1:-}" ]; then
        echo >&2 "cdc requires you to supply a root feature (TAB completion should work)."
        return 1
    elif root=$(fe_workspaces_root); then
        builtin cd $root/"$1"/+clone+/
    fi
}

complete -C cdc cdc

function private_cdf {
    dir=$(builtin cd / && fe workspace dir "$1" || true)
    if [ -n "$dir" ] && builtin cd "$dir"; then
        if [ -n "${2:-}" ]; then
            export OLD_CDF_FEATURE=$2
        fi
    else
        return 1
    fi
}

function cdf {
    OLD_CDF_FEATURE=${OLD_CDF_FEATURE:-}
    local dir FEATURE rep WDIR
    local starting_feature
    starting_feature=$(fe workspace pwd 2> /dev/null || true)
    if should_complete; then
        COMP_CWORD=2 fe show $2
    elif [ -z "${1:-}" ]; then
        echo >&2 "cdf requires you to supply a feature (TAB completion should work)."
        return 1
    elif [ "$1" = "-" ]; then
        if [ -z "$OLD_CDF_FEATURE" ]; then
            echo >&2 "cdf: OLD_CDF_FEATURE not set"
            return 1
        else
            private_cdf "$OLD_CDF_FEATURE" "$starting_feature" && builtin pwd
        fi
    else
        # If stdin is a terminal, we would like to give a chance to the user to
        # create the workspace on the spot if it does not exist.
        FEATURE=''
        if [ -t 0 ] || [ "${IRON_FUNCTIONAL_TESTING-not set}" != "not set" ]; then
            WDIR=$(fe workspace dir "$1" 2>&1 || true)
            if echo ${WDIR} | grep -q "you don't have a workspace for"; then
                FEATURE=$(echo ${WDIR} | sexp query '(index 1)')
            fi
        fi
        if [ -n "${FEATURE}" ] && [ "$(fe tools feature-exists ${FEATURE})" = "true" ]; then
            read -n 1 -p "You don't have a workspace for [${FEATURE}].  Create one ? (Y/n): "
            rep=${REPLY}
            echo ''
            case ${rep} in
                Y|y|"")
                    if ! fe workspace create ${FEATURE}; then
                        return 1
                    fi
                    ;;
                *)
                    return 1
                    ;;
            esac
        fi
        private_cdf "$1" "$starting_feature"
    fi
}

complete -C cdf cdf

function cdw {
      local dir
      if should_complete; then
          fe workspace list | fe tools complete-feature-path "$2"
      elif [ -z "${1:-}" ]; then
          builtin cd $(fe workspace dir -basedir)
      else
          cdf "$1"
      fi
  }

complete -C cdw cdw
