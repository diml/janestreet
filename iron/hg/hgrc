# -*- mode: conf; -*-

[extensions]
purge =
blackbox =
global_tags=/j/office/app/hg/prod/jhg/global_tags_v3.py
specifiable_commit_metadata=/j/office/app/hg/prod/jhg/specifiable_commit_metadata.py
share =
# This extension tweaks the bookmark update done on 'hg pull' in the following
# two ways:
#
# 1. The only bookmarks manipulated are those specified explicitly in the
# pull.
#
# 2. If a local bookmark and the remote bookmark have diverged (or
# the remote bookmark doesn't exist), and the revision the local
# bookmark points to is in the remote repo, then the local bookmark is
# updated to the remote one (or deleted, if the remote bookmark
# doesn't exist) on a pull.
#
# Of course, Iron actually will also do an 'hg update'.  Here's what
# it does (after loading this extension) in two situations: Suppose R1
# and R2 are two incomparable revisions and bookmark B points to R1 in
# the local repo and R2 in the remote repo.  Furthermore, suppose R1
# is the current revision in the local repo.
#
# If R1 is not in the remote repo: When the user runs 'fe review', R2
# will be pulled, given a divergent bookmark like B@default, and 'fe
# review' will fail (as expected, but with the perhaps confusing
# message "review-session tip is not an ancestor of feature tip").
#
# If R1 is in the remote repo: When the user types 'fe review', R2
# will be pulled, given the bookmark B, fe will update to the new B
# (even though it's not a child of R1) and do the review.
iron_bookmark_manipulation=/j/office/app/hg/prod/jhg/iron_bookmark_manipulation_v3.py

# adds [hg active-bookmark].
active_bookmark=/j/office/app/hg/prod/jhg/active_bookmark_v3.py

# Updates the files .hg/dirstate.for-{omake,jenga}.txt on hg operations which
# change the dirstate.  This file is used by jenga.
dirstate_for_omake=/j/office/app/hg/prod/jhg/dirstate_for_omake_v6.py

# Causes bookmark information only to be shared for bookmarks
# explicitly passed with [-r] or [-B] to [hg push].
only_push_explicitly_mentioned_bookmarks=/j/office/app/hg/prod/jhg/only_push_explicitly_mentioned_bookmarks_v1.py

tracefile=/j/office/app/hg/prod/jhg/fix_tracefile.py

# Add [hg distclean]
distclean=/j/office/app/hg/prod/jhg/distclean_v1.py

# In hg >= 3.5, bookmark names with length greater than 255 cause
# problems with pushes due to the use of the new bundle2 protocol.
# This extension gets around this by not using bundle2 to exchange
# bookmark names.
allow_long_bookmark_names=/j/office/app/hg/prod/jhg/allow_long_bookmarks_v1.py

# In hg < 4.1, [hg status] will create a file matching
# [hg-checkexec-*] in the repo to test to see if the filesystem has
# unix-y management of exec bits.  However, this can cause concurrent
# [hg status] calls to show as unclean.  This extension fixes this by
# creating the test files in [.hg/cache] instead (this is also where
# hg >= 4.1 creates them).
fix_checkexec=/j/office/app/hg/prod/jhg/fix_checkexec_v1.py
