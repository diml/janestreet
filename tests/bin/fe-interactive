#!/bin/bash

source $(dirname $0)/prepare
source $(dirname $0)/common

unset IRON_FUNCTIONAL_TESTING
export IRON_APPDIRS=$IRON_TEST_DIR/appdir
mkdir -p $IRON_APPDIRS

export IRON_APPDIR=$IRON_APPDIRS/interactive
export IRON_BASEDIR=$IRON_APPDIR/$IRON_MODE
mkdir -p $IRON_BASEDIR/{etc,export,var}
IRON_CONFIG_PATH=$IRON_BASEDIR/etc/iron-config.sexp
if ! [ -f $IRON_CONFIG_PATH ]; then
    cat >$IRON_CONFIG_PATH <<EOF
((host localhost)
 (async_rpc_port (dynamic $IRON_BASEDIR/var/server-listening-on-port))
 (hgrc $IRON_TEST_DIR/../hg/hgrc)
)
EOF
fi
export IRON_CONFIG="$(cat $IRON_CONFIG_PATH)"

command=${1:-""}
case "$command" in
    "dispatch")
        shift
        dispatch add -f fe-interactive $IRON_TEST_DIR/bin/fe-interactive
        ;;

    "set-last-backup")
        shift
        echo "make sure the server is not running in $IRON_APPDIRS/interactive"
        $IRON_TEST_DIR/../bin/fe.exe admin server stop \
            -appdir $IRON_APPDIRS/interactive \
            -mode $IRON_MODE "$@" || true
        echo "remove previous directory"
        rm -rf $IRON_APPDIRS/interactive/dev/export
        backup=$(ls -1 /j/tot/app/fe/prod/backups/export-dir-backup.*.tar.xz | sort -g | tail -n 1)
        echo "setting up state from: $(basename ${backup})"
        tar --directory="$IRON_APPDIRS/interactive/dev" -xJf ${backup}
        ;;

    "start"|"stop")
        shift
        $IRON_TEST_DIR/../bin/fe.exe admin server $command \
            -appdir $IRON_APPDIRS/interactive \
            -mode $IRON_MODE "$@"
        ;;

    *)
        $IRON_TEST_DIR/../bin/fe.exe "$@"
        ;;
esac
